{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "id": "Z_Hk4I68LElq"
      },
      "outputs": [],
      "source": [
        "from math import ceil\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.preprocessing import OneHotEncoder,LabelEncoder,StandardScaler,MinMaxScaler\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.tree import DecisionTreeRegressor\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import mean_squared_error, r2_score,mean_absolute_error\n",
        "from sklearn.model_selection import cross_val_score,GridSearchCV\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('/content/Japan_used_cars_datasets.csv')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "tflrKKRw9l1R",
        "outputId": "fbc8dabf-13f5-4bc6-c898-482babb04a1a"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   id  price      mark    model  year  mileage  engine_capacity transmission  \\\n",
              "0   0     80    nissan    march  2003    80000             1240           at   \n",
              "1   1    110    nissan    march  2010    53000             1200           at   \n",
              "2   2    165    nissan  lafesta  2005    47690             2000           at   \n",
              "3   3    190    toyota  avensis  2008   130661             1990           at   \n",
              "4   4    190  daihatsu     mira  2006    66300              660           at   \n",
              "\n",
              "  drive hand_drive      fuel  \n",
              "0   2wd        rhd  gasoline  \n",
              "1   2wd        rhd  gasoline  \n",
              "2   2wd        rhd  gasoline  \n",
              "3   2wd        rhd  gasoline  \n",
              "4   2wd        rhd  gasoline  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ebdb2b3-c339-4c40-9a9d-9398647ca396\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>price</th>\n",
              "      <th>mark</th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>mileage</th>\n",
              "      <th>engine_capacity</th>\n",
              "      <th>transmission</th>\n",
              "      <th>drive</th>\n",
              "      <th>hand_drive</th>\n",
              "      <th>fuel</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>80</td>\n",
              "      <td>nissan</td>\n",
              "      <td>march</td>\n",
              "      <td>2003</td>\n",
              "      <td>80000</td>\n",
              "      <td>1240</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>110</td>\n",
              "      <td>nissan</td>\n",
              "      <td>march</td>\n",
              "      <td>2010</td>\n",
              "      <td>53000</td>\n",
              "      <td>1200</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>nissan</td>\n",
              "      <td>lafesta</td>\n",
              "      <td>2005</td>\n",
              "      <td>47690</td>\n",
              "      <td>2000</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>190</td>\n",
              "      <td>toyota</td>\n",
              "      <td>avensis</td>\n",
              "      <td>2008</td>\n",
              "      <td>130661</td>\n",
              "      <td>1990</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>190</td>\n",
              "      <td>daihatsu</td>\n",
              "      <td>mira</td>\n",
              "      <td>2006</td>\n",
              "      <td>66300</td>\n",
              "      <td>660</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ebdb2b3-c339-4c40-9a9d-9398647ca396')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3ebdb2b3-c339-4c40-9a9d-9398647ca396 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3ebdb2b3-c339-4c40-9a9d-9398647ca396');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-69da60a9-822e-49ca-852d-83585a449b97\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69da60a9-822e-49ca-852d-83585a449b97')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-69da60a9-822e-49ca-852d-83585a449b97 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 2318,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 674,\n        \"min\": 0,\n        \"max\": 2335,\n        \"num_unique_values\": 2318,\n        \"samples\": [\n          1050,\n          552,\n          102\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 80,\n        \"max\": 1400,\n        \"num_unique_values\": 354,\n        \"samples\": [\n          1054,\n          467,\n          1236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mark\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"mitsubishi\",\n          \"ford\",\n          \"kubota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 258,\n        \"samples\": [\n          \"naked\",\n          \"esse\",\n          \"mercedes-benz others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1979,\n        \"max\": 2015,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          1992,\n          2000,\n          1990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52512,\n        \"min\": 2000,\n        \"max\": 790000,\n        \"num_unique_values\": 1367,\n        \"samples\": [\n          168000,\n          72867,\n          107915\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"engine_capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 549,\n        \"min\": 9,\n        \"max\": 12340,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          3500,\n          2970,\n          2350\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transmission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"at\",\n          \"mt\",\n          \"cvt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2wd\",\n          \"4wd\",\n          \"awd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hand_drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"rhd\",\n          \"center\",\n          \"lhd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"diesel\",\n          \"cng\",\n          \"hybrid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p7FM8OB_IgNe",
        "outputId": "533c8e5e-d128-4dbc-a368-bc28166c6457"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2318, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qe4eBvznUNhR",
        "outputId": "1b42af63-0573-4d55-8e51-a9a756f1c893"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2318 entries, 0 to 2317\n",
            "Data columns (total 11 columns):\n",
            " #   Column           Non-Null Count  Dtype \n",
            "---  ------           --------------  ----- \n",
            " 0   id               2318 non-null   int64 \n",
            " 1   price            2318 non-null   int64 \n",
            " 2   mark             2318 non-null   object\n",
            " 3   model            2318 non-null   object\n",
            " 4   year             2318 non-null   int64 \n",
            " 5   mileage          2318 non-null   int64 \n",
            " 6   engine_capacity  2318 non-null   int64 \n",
            " 7   transmission     2318 non-null   object\n",
            " 8   drive            2318 non-null   object\n",
            " 9   hand_drive       2318 non-null   object\n",
            " 10  fuel             2318 non-null   object\n",
            "dtypes: int64(5), object(6)\n",
            "memory usage: 199.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(columns=['id'],inplace=True)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "2hbaR-3p_l6K",
        "outputId": "d82b00cb-fa5e-465c-a0c1-419457cf7a83"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   price      mark    model  year  mileage  engine_capacity transmission  \\\n",
              "0     80    nissan    march  2003    80000             1240           at   \n",
              "1    110    nissan    march  2010    53000             1200           at   \n",
              "2    165    nissan  lafesta  2005    47690             2000           at   \n",
              "3    190    toyota  avensis  2008   130661             1990           at   \n",
              "4    190  daihatsu     mira  2006    66300              660           at   \n",
              "\n",
              "  drive hand_drive      fuel  \n",
              "0   2wd        rhd  gasoline  \n",
              "1   2wd        rhd  gasoline  \n",
              "2   2wd        rhd  gasoline  \n",
              "3   2wd        rhd  gasoline  \n",
              "4   2wd        rhd  gasoline  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee281388-ae12-4312-8373-b929966fef80\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>mark</th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>mileage</th>\n",
              "      <th>engine_capacity</th>\n",
              "      <th>transmission</th>\n",
              "      <th>drive</th>\n",
              "      <th>hand_drive</th>\n",
              "      <th>fuel</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>80</td>\n",
              "      <td>nissan</td>\n",
              "      <td>march</td>\n",
              "      <td>2003</td>\n",
              "      <td>80000</td>\n",
              "      <td>1240</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>110</td>\n",
              "      <td>nissan</td>\n",
              "      <td>march</td>\n",
              "      <td>2010</td>\n",
              "      <td>53000</td>\n",
              "      <td>1200</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>165</td>\n",
              "      <td>nissan</td>\n",
              "      <td>lafesta</td>\n",
              "      <td>2005</td>\n",
              "      <td>47690</td>\n",
              "      <td>2000</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>190</td>\n",
              "      <td>toyota</td>\n",
              "      <td>avensis</td>\n",
              "      <td>2008</td>\n",
              "      <td>130661</td>\n",
              "      <td>1990</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>190</td>\n",
              "      <td>daihatsu</td>\n",
              "      <td>mira</td>\n",
              "      <td>2006</td>\n",
              "      <td>66300</td>\n",
              "      <td>660</td>\n",
              "      <td>at</td>\n",
              "      <td>2wd</td>\n",
              "      <td>rhd</td>\n",
              "      <td>gasoline</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee281388-ae12-4312-8373-b929966fef80')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ee281388-ae12-4312-8373-b929966fef80 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ee281388-ae12-4312-8373-b929966fef80');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f39b53c7-0f79-4887-9009-519b49cc25de\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f39b53c7-0f79-4887-9009-519b49cc25de')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f39b53c7-0f79-4887-9009-519b49cc25de button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 2318,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 80,\n        \"max\": 1400,\n        \"num_unique_values\": 354,\n        \"samples\": [\n          1054,\n          467,\n          1236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mark\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"mitsubishi\",\n          \"ford\",\n          \"kubota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 258,\n        \"samples\": [\n          \"naked\",\n          \"esse\",\n          \"mercedes-benz others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1979,\n        \"max\": 2015,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          1992,\n          2000,\n          1990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52512,\n        \"min\": 2000,\n        \"max\": 790000,\n        \"num_unique_values\": 1367,\n        \"samples\": [\n          168000,\n          72867,\n          107915\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"engine_capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 549,\n        \"min\": 9,\n        \"max\": 12340,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          3500,\n          2970,\n          2350\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transmission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"at\",\n          \"mt\",\n          \"cvt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2wd\",\n          \"4wd\",\n          \"awd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hand_drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"rhd\",\n          \"center\",\n          \"lhd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"diesel\",\n          \"cng\",\n          \"hybrid\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.isna().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yqlfxc3O_-5D",
        "outputId": "f10f81e7-842b-4fcd-fd13-4bb49e17bf68"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "price              0\n",
            "mark               0\n",
            "model              0\n",
            "year               0\n",
            "mileage            0\n",
            "engine_capacity    0\n",
            "transmission       0\n",
            "drive              0\n",
            "hand_drive         0\n",
            "fuel               0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fr0Sw5hfAT_6",
        "outputId": "b02ffe73-d60c-414c-dcfd-58feb54fa8d1"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 462
        },
        "id": "I9t1NE7jApx5",
        "outputId": "279eb23b-ba06-4ddc-f8d2-7a09b22afd49"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "price               354\n",
              "mark                 28\n",
              "model               258\n",
              "year                 30\n",
              "mileage            1367\n",
              "engine_capacity      93\n",
              "transmission          3\n",
              "drive                 3\n",
              "hand_drive            3\n",
              "fuel                  5\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>price</th>\n",
              "      <td>354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mark</th>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>model</th>\n",
              "      <td>258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>year</th>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mileage</th>\n",
              "      <td>1367</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>engine_capacity</th>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>transmission</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>drive</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>hand_drive</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fuel</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(df[['price','year','mileage','engine_capacity']].corr(),annot=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457
        },
        "id": "H2ciYYyZHu6t",
        "outputId": "3dadd465-07dd-480f-f4a5-48c309da023d"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 40
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.distplot(df['price'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "eQXY25V9IUIA",
        "outputId": "e2e1e967-d487-45d0-89eb-8be03c0a8473"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='price', ylabel='Density'>"
            ]
          },
          "metadata": {},
          "execution_count": 41
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(df['price'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 433
        },
        "id": "M9X4vUnkZGH2",
        "outputId": "6dd0ccb7-8c08-4599-8bc5-e28fd3b6cf0b"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='price'>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def eliminate_outliers(df, col):\n",
        "    Q1 = df[col].quantile(0.25)\n",
        "    Q3 = df[col].quantile(0.75)\n",
        "    IQR = Q3 - Q1\n",
        "\n",
        "    return df[~ ((df[col] < (Q1 - 1.5 * IQR)) | (df[col] > (Q3 + 1.5 * IQR))) ]\n",
        "\n",
        "df = eliminate_outliers(df, 'price')"
      ],
      "metadata": {
        "id": "P95dhVMWgTft"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.distplot(df['price'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "CuvLaOT_Jr7k",
        "outputId": "064c2659-7dc6-4d12-a499-1ca81f795b0d"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='price', ylabel='Density'>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['mark'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7t8Je6ruiKhf",
        "outputId": "825f3b25-6195-49f3-91c3-455808a31375"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['nissan', 'toyota', 'daihatsu', 'volkswagen', 'mazda', 'honda',\n",
              "       'subaru', 'mercedes-benz', 'kubota', 'mitsubishi', 'suzuki', 'bmw',\n",
              "       'chrysler', 'smart', 'gm', 'opel', 'isuzu', 'land rover',\n",
              "       'peugeot', 'hyundai', 'kia motors', 'audi', 'citroen', 'mitsuoka',\n",
              "       'volvo', 'ford', 'hino', 'jaguar'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "brand_model_counts=df.groupby('mark')['model'].nunique().sort_values(ascending=False)\n",
        "brand_model_counts=brand_model_counts.head(10).reset_index()\n",
        "print(brand_model_counts)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b46-FRT_wLVF",
        "outputId": "008fb1a6-1ac0-4eb5-f9d2-7bc6574900a6"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            mark  model\n",
            "0         toyota     64\n",
            "1         nissan     31\n",
            "2          honda     26\n",
            "3     mitsubishi     22\n",
            "4          mazda     21\n",
            "5       daihatsu     18\n",
            "6         suzuki     18\n",
            "7         subaru     15\n",
            "8     volkswagen      6\n",
            "9  mercedes-benz      5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['fuel'].value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rAXICM4VMICt",
        "outputId": "d6743907-949a-4ac0-8c68-9879fcbcf3d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fuel\n",
            "gasoline    2288\n",
            "diesel        18\n",
            "lpg            7\n",
            "hybrid         2\n",
            "cng            1\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['engine_capacity'].value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wn9_S38EMSm8",
        "outputId": "add3ee9f-e082-461b-c410-b0992d40500a"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "engine_capacity\n",
            "1300    468\n",
            "1500    433\n",
            "2000    197\n",
            "1000    168\n",
            "660     159\n",
            "       ... \n",
            "1986      1\n",
            "798       1\n",
            "1587      1\n",
            "1270      1\n",
            "1999      1\n",
            "Name: count, Length: 93, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(height=df['hand_drive'].value_counts(),x=df['hand_drive'].value_counts().index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "3aNDJDajyCSN",
        "outputId": "7fbb6584-9678-41ac-8f9a-b403bb306fd9"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 3 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[df['hand_drive']=='center']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "id": "1s-hZaemyESE",
        "outputId": "5babb86c-e937-4402-a4dc-251536f34605"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    price    mark          model  year  mileage  engine_capacity transmission  \\\n",
              "23    300  kubota  kubota others  1979     9999                9           mt   \n",
              "\n",
              "   drive hand_drive    fuel  \n",
              "23   4wd     center  diesel  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d191640e-97ef-4587-98ec-567934175051\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>mark</th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>mileage</th>\n",
              "      <th>engine_capacity</th>\n",
              "      <th>transmission</th>\n",
              "      <th>drive</th>\n",
              "      <th>hand_drive</th>\n",
              "      <th>fuel</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>300</td>\n",
              "      <td>kubota</td>\n",
              "      <td>kubota others</td>\n",
              "      <td>1979</td>\n",
              "      <td>9999</td>\n",
              "      <td>9</td>\n",
              "      <td>mt</td>\n",
              "      <td>4wd</td>\n",
              "      <td>center</td>\n",
              "      <td>diesel</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d191640e-97ef-4587-98ec-567934175051')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d191640e-97ef-4587-98ec-567934175051 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d191640e-97ef-4587-98ec-567934175051');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df[df['hand_drive']=='center']\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 300,\n        \"max\": 300,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mark\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"kubota\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"kubota others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1979,\n        \"max\": 1979,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1979\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9999,\n        \"max\": 9999,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"engine_capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9,\n        \"max\": 9,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transmission\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"mt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drive\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"4wd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hand_drive\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"center\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"diesel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop(index=23).reset_index(drop=True)\n",
        "df[df['hand_drive']=='center']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "R8M876IzyIb0",
        "outputId": "d7804f2a-3619-4915-da8b-0c2cb8235c0c"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [price, mark, model, year, mileage, engine_capacity, transmission, drive, hand_drive, fuel]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cd17e102-cf20-4481-a577-26872386d22a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>mark</th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>mileage</th>\n",
              "      <th>engine_capacity</th>\n",
              "      <th>transmission</th>\n",
              "      <th>drive</th>\n",
              "      <th>hand_drive</th>\n",
              "      <th>fuel</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd17e102-cf20-4481-a577-26872386d22a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cd17e102-cf20-4481-a577-26872386d22a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cd17e102-cf20-4481-a577-26872386d22a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "object_cols = ['fuel', 'transmission', 'hand_drive', 'drive']\n",
        "\n",
        "# Plotting our graphs all in one\n",
        "fig, axes = plt.subplots(2, 2, figsize=(20, 15))\n",
        "\n",
        "idx = 0\n",
        "for i in range(ceil(len(object_cols) / 2)):\n",
        "    for j in range(2):\n",
        "        sns.barplot(x=object_cols[idx], y='price', data=df, ax=axes[i, j])\n",
        "        idx += 1\n",
        "\n",
        "fig.suptitle('Average Price of Each Category', fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 971
        },
        "id": "s4f9DPq4XMU2",
        "outputId": "d48f74bd-9b17-43c4-d357-46ff7fcf6f07"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0.98, 'Average Price of Each Category')"
            ]
          },
          "metadata": {},
          "execution_count": 58
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1500 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "object_cols = ['year', 'mileage', 'engine_capacity']\n",
        "\n",
        "# Plotting our graphs all in one\n",
        "fig, axes = plt.subplots(2, 2, figsize=(20, 15))\n",
        "\n",
        "idx = 0\n",
        "for i in range(ceil(len(object_cols) / 2)):\n",
        "    for j in range(2):\n",
        "        sns.distplot(x=df[object_cols[idx]], ax=axes[i, j],axlabel=object_cols[idx])\n",
        "        idx += 1\n",
        "        if idx == len(object_cols):\n",
        "            break\n",
        "\n",
        "fig.suptitle('Average Price of Each Category', fontsize=16)"
      ],
      "metadata": {
        "id": "zyrafHH8tBWP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 957
        },
        "outputId": "f0bcf8b7-14bb-4b39-8ba0-2ac022c0b09d"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0.98, 'Average Price of Each Category')"
            ]
          },
          "metadata": {},
          "execution_count": 59
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1500 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = eliminate_outliers(df, 'mileage')\n",
        "df = eliminate_outliers(df,'engine_capacity')\n",
        "df = eliminate_outliers(df,'year')"
      ],
      "metadata": {
        "id": "1_tv5izGLq_e"
      },
      "execution_count": 60,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "object_cols = ['year', 'mileage', 'engine_capacity']\n",
        "\n",
        "# Plotting our graphs all in one\n",
        "fig, axes = plt.subplots(2, 2, figsize=(20, 15))\n",
        "\n",
        "idx = 0\n",
        "for i in range(ceil(len(object_cols) / 2)):\n",
        "    for j in range(2):\n",
        "        sns.distplot(x=df[object_cols[idx]], ax=axes[i, j],axlabel=object_cols[idx])\n",
        "        idx += 1\n",
        "        if idx == len(object_cols):\n",
        "            break\n",
        "\n",
        "fig.suptitle('Average Price of Each Category', fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 957
        },
        "id": "Y59IBC_zS86f",
        "outputId": "b177b650-98a2-4b66-ddd5-15828fbe20b6"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0.98, 'Average Price of Each Category')"
            ]
          },
          "metadata": {},
          "execution_count": 61
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1500 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "label_en=LabelEncoder()\n",
        "df['fuel']=label_en.fit_transform(df['fuel'])\n",
        "df['transmission']=label_en.fit_transform(df['transmission'])\n",
        "df['hand_drive']=label_en.fit_transform(df['hand_drive'])\n",
        "df['drive']=label_en.fit_transform(df['drive'])"
      ],
      "metadata": {
        "id": "c7FbEpPxPmxS"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "zkNNPr3fTC03",
        "outputId": "3c29532c-5f48-4b1e-a931-a75f99c7044d"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   price      mark    model  year  mileage  engine_capacity  transmission  \\\n",
              "0    165    nissan  lafesta  2005    47690             2000             0   \n",
              "1    190    toyota  avensis  2008   130661             1990             0   \n",
              "2    190  daihatsu     mira  2006    66300              660             0   \n",
              "3    190  daihatsu     mira  2004    81400              660             0   \n",
              "4    220    nissan    march  2010   117000             1200             0   \n",
              "\n",
              "   drive  hand_drive  fuel  \n",
              "0      0           1     2  \n",
              "1      0           1     2  \n",
              "2      0           1     2  \n",
              "3      0           1     2  \n",
              "4      0           1     2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f708081-e030-4441-a144-2d3c2ecadff5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>price</th>\n",
              "      <th>mark</th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>mileage</th>\n",
              "      <th>engine_capacity</th>\n",
              "      <th>transmission</th>\n",
              "      <th>drive</th>\n",
              "      <th>hand_drive</th>\n",
              "      <th>fuel</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>165</td>\n",
              "      <td>nissan</td>\n",
              "      <td>lafesta</td>\n",
              "      <td>2005</td>\n",
              "      <td>47690</td>\n",
              "      <td>2000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>190</td>\n",
              "      <td>toyota</td>\n",
              "      <td>avensis</td>\n",
              "      <td>2008</td>\n",
              "      <td>130661</td>\n",
              "      <td>1990</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>190</td>\n",
              "      <td>daihatsu</td>\n",
              "      <td>mira</td>\n",
              "      <td>2006</td>\n",
              "      <td>66300</td>\n",
              "      <td>660</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>190</td>\n",
              "      <td>daihatsu</td>\n",
              "      <td>mira</td>\n",
              "      <td>2004</td>\n",
              "      <td>81400</td>\n",
              "      <td>660</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>220</td>\n",
              "      <td>nissan</td>\n",
              "      <td>march</td>\n",
              "      <td>2010</td>\n",
              "      <td>117000</td>\n",
              "      <td>1200</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f708081-e030-4441-a144-2d3c2ecadff5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f708081-e030-4441-a144-2d3c2ecadff5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f708081-e030-4441-a144-2d3c2ecadff5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c71619e6-a069-41e9-a99f-91ed6146b14a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c71619e6-a069-41e9-a99f-91ed6146b14a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c71619e6-a069-41e9-a99f-91ed6146b14a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 2197,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 287,\n        \"min\": 165,\n        \"max\": 1400,\n        \"num_unique_values\": 337,\n        \"samples\": [\n          500,\n          920,\n          579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mark\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"suzuki\",\n          \"hyundai\",\n          \"nissan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 230,\n        \"samples\": [\n          \"golf variant\",\n          \"carol\",\n          \"note\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1997,\n        \"max\": 2015,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2005,\n          2002,\n          1998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40674,\n        \"min\": 2000,\n        \"max\": 208434,\n        \"num_unique_values\": 1281,\n        \"samples\": [\n          127897,\n          129880,\n          79324\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"engine_capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 436,\n        \"min\": 650,\n        \"max\": 2520,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          1460,\n          2000,\n          1660\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hand_drive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "scale=StandardScaler()"
      ],
      "metadata": {
        "id": "BCi8nesadUnZ"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X=df.drop(columns=['price','mark','model'],axis=1)\n",
        "y=df['price']\n",
        "X=scale.fit_transform(X)\n",
        "y=scale.fit_transform(y.values.reshape(-1,1))"
      ],
      "metadata": {
        "id": "A_Q6e4hDT64-"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qcAoRVd1h6lG",
        "outputId": "50bb97c1-cb3c-4c5e-b74e-633a03e1759e"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[-0.37732568 -1.18654125  1.19840097 ... -0.2807866   0.08008241\n",
            "   0.03018546]\n",
            " [ 0.548914    0.8537934   1.17550481 ... -0.2807866   0.08008241\n",
            "   0.03018546]\n",
            " [-0.06857912 -0.72890391 -1.86968477 ... -0.2807866   0.08008241\n",
            "   0.03018546]\n",
            " ...\n",
            " [ 0.85766056  0.61622036 -1.10037372 ... -0.2807866   0.08008241\n",
            "   0.03018546]\n",
            " [-0.37732568  0.12440161 -1.86968477 ... -0.2807866   0.08008241\n",
            "   0.03018546]\n",
            " [-1.92105848  1.82117628 -1.86968477 ...  3.34796734  0.08008241\n",
            "   0.03018546]]\n",
            "[[-2.80189092]\n",
            " [-2.71493777]\n",
            " [-2.71493777]\n",
            " ...\n",
            " [ 1.49359469]\n",
            " [ 1.49359469]\n",
            " [ 1.49359469]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "performance = {}"
      ],
      "metadata": {
        "id": "LpEazW_cW-lw"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15)"
      ],
      "metadata": {
        "id": "uKVt1QQqWkdI"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model1=LinearRegression()\n",
        "model1.fit(X_train,y_train)\n",
        "y_pred_train=model1.predict(X_train)\n",
        "y_pred_test=model1.predict(X_test)\n",
        "print('\\033[1mTraining data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_train,y_pred_train))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_train,y_pred_train))*((X_train.shape[0]-1)/(X_train.shape[0]-X_train.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mTesting data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_test,y_pred_test))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_test,y_pred_test))*((X_test.shape[0]-1)/(X_test.shape[0]-X_test.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mThe performance metrics\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('MAE',mean_absolute_error(y_test,y_pred_test))\n",
        "print('MSE',mean_squared_error(y_test,y_pred_test))\n",
        "print('RMSE',np.sqrt(mean_squared_error(y_test,y_pred_test)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sL4w_9lH1NF6",
        "outputId": "32d904c9-000b-4851-9d28-6a8923d2e18b"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mTraining data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.0816737632574337\n",
            "Adjusted R2 score 0.07821583767529394\n",
            "\n",
            "\n",
            "\u001b[1mTesting data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.062199217839469134\n",
            "Adjusted R2 score 0.04181224431424013\n",
            "\n",
            "\n",
            "\u001b[1mThe performance metrics\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "MAE 0.787540412860828\n",
            "MSE 0.9193735069292295\n",
            "RMSE 0.9588396669564884\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "parameters = {'criterion':['squared_error'], 'splitter' :['best'], 'max_depth' :[6], 'max_features' :[1.0]}\n",
        "\n",
        "model2= GridSearchCV(DecisionTreeRegressor(), param_grid=parameters , cv=10, n_jobs=-1)\n",
        "model2.fit(X_train,y_train)\n",
        "y_pred_train = model2.predict(X_train)\n",
        "y_pred = model2.predict(X_test)\n",
        "\n",
        "print('\\033[1mTraining data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_train,y_pred_train))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_train,y_pred_train))*((X_train.shape[0]-1)/(X_train.shape[0]-X_train.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mTesting data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_test,y_pred))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_test,y_pred))*((X_test.shape[0]-1)/(X_test.shape[0]-X_test.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mCross-validation score and best params\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print(\"The best parameters is\", model2.best_params_)\n",
        "print('cross-validation score', model2.best_score_)\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mThe performance metrics\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('MAE',mean_absolute_error(y_test,y_pred))\n",
        "print('MSE',mean_squared_error(y_test,y_pred))\n",
        "print('RMSE',np.sqrt(mean_squared_error(y_test,y_pred)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "td-rsU4ZXnvv",
        "outputId": "a06d5ba6-f222-4730-8131-289bd78cf41f"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mTraining data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.2786706046906514\n",
            "Adjusted R2 score 0.2759544638799116\n",
            "\n",
            "\n",
            "\u001b[1mTesting data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.12694895492910396\n",
            "Adjusted R2 score 0.10796958438408444\n",
            "\n",
            "\n",
            "\u001b[1mCross-validation score and best params\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "The best parameters is {'criterion': 'squared_error', 'max_depth': 6, 'max_features': 1.0, 'splitter': 'best'}\n",
            "cross-validation score 0.10688889257121623\n",
            "\n",
            "\n",
            "\u001b[1mThe performance metrics\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "MAE 0.746907326027246\n",
            "MSE 0.8558960669513078\n",
            "RMSE 0.9251465110734125\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "parameters = {'n_estimators':[58],'max_depth' :[6],'max_features' :[None],'max_samples' :[0.85]}\n",
        "\n",
        "model3=GridSearchCV(RandomForestRegressor(), param_grid=parameters , cv=10, n_jobs=-1)\n",
        "model3.fit(X_train,y_train)\n",
        "y_pred_train = model3.predict(X_train)\n",
        "y_pred = model3.predict(X_test)\n",
        "\n",
        "print('\\033[1mTraining data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_train,y_pred_train))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_train,y_pred_train))*((X_train.shape[0]-1)/(X_train.shape[0]-X_train.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mTesting data R2 and Adjusted R2 Score\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('R2 score',r2_score(y_test,y_pred))\n",
        "print('Adjusted R2 score', (1-(1-r2_score(y_test,y_pred))*((X_test.shape[0]-1)/(X_test.shape[0]-X_test.shape[1]-1))))\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mCross-validation score and best params\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print(\"The best parameters is\", model3.best_params_)\n",
        "print('cross-validation score', model3.best_score_)\n",
        "\n",
        "print('\\n')\n",
        "print('\\033[1mThe performance metrics\\033[0m')\n",
        "print('\\033[1m' + '-----------------------------------------' + '\\033[0m')\n",
        "print('MAE',mean_absolute_error(y_test,y_pred))\n",
        "print('MSE',mean_squared_error(y_test,y_pred))\n",
        "print('RMSE',np.sqrt(mean_squared_error(y_test,y_pred)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GiQFnleYZeCw",
        "outputId": "07739ec5-ea2a-4cdb-b177-371d9805650f"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mTraining data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.30928052414627827\n",
            "Adjusted R2 score 0.30667964392520464\n",
            "\n",
            "\n",
            "\u001b[1mTesting data R2 and Adjusted R2 Score\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "R2 score 0.17379148383681842\n",
            "Adjusted R2 score 0.1558304291376187\n",
            "\n",
            "\n",
            "\u001b[1mCross-validation score and best params\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "The best parameters is {'max_depth': 6, 'max_features': None, 'max_samples': 0.85, 'n_estimators': 58}\n",
            "cross-validation score 0.17189917608643687\n",
            "\n",
            "\n",
            "\u001b[1mThe performance metrics\u001b[0m\n",
            "\u001b[1m-----------------------------------------\u001b[0m\n",
            "MAE 0.7405972224169515\n",
            "MSE 0.8099739682555664\n",
            "RMSE 0.8999855378035618\n"
          ]
        }
      ]
    }
  ]
}
